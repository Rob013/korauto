const e=["Toyota","Honda","BMW","Mercedes-Benz","Audi","Volkswagen","Hyundai","Kia"],a={Toyota:["Camry","Corolla","RAV4","Prius","Highlander"],Honda:["Civic","Accord","CR-V","Pilot","Fit"],BMW:["3 Series","5 Series","X3","X5","i3"],"Mercedes-Benz":["C-Class","E-Class","GLC","GLE","A-Class"],Audi:["A3","A4","A6","Q3","Q5"],Volkswagen:["Golf","Passat","Tiguan","Jetta","Atlas"],Hyundai:["Elantra","Sonata","Tucson","Santa Fe","Kona"],Kia:["Forte","Optima","Sorento","Sportage","Soul"]},r=["Petrol","Diesel","Hybrid","Electric"],o=["Manual","Automatic","CVT"],t=["Sedan","SUV","Hatchback","Coupe","Wagon"],s=["Black","White","Silver","Gray","Blue","Red","Green"],l=["Seoul","Busan","Incheon","Daegu","Ulsan","Daejeon"],i=e=>{const a=1e4*Math.sin(e);return a-Math.floor(a)},n=(n,c=1)=>{const h=[];for(let d=0;d<n;d++){const n=c+d,p=e[Math.floor(i(1*n)*e.length)],u=a[p][Math.floor(i(2*n)*a[p].length)],g=2015+Math.floor(10*i(3*n)),f=15e3+Math.floor(85e3*i(4*n)),M=Math.floor(2e5*i(5*n));h.push({id:`car-${c+d}`,make:p,model:u,year:g,price:f,mileage:M,fuel:r[Math.floor(i(6*n)*r.length)],transmission:o[Math.floor(i(7*n)*o.length)],bodyType:t[Math.floor(i(8*n)*t.length)],color:s[Math.floor(i(9*n)*s.length)],location:l[Math.floor(i(10*n)*l.length)],images:[`https://picsum.photos/400/300?random=${c+d}`]})}return h},c=n(2e3),h=async(e,a)=>{if(await new Promise(e=>setTimeout(e,500)),a?.aborted)throw new Error("Request aborted");let r=[...c];if(e.brand&&(r=r.filter(a=>a.make.toLowerCase()===e.brand.toLowerCase())),e.model&&(r=r.filter(a=>a.model.toLowerCase().includes(e.model.toLowerCase()))),e.fuel&&(r=r.filter(a=>a.fuel?.toLowerCase()===e.fuel.toLowerCase())),e.yearMin&&(r=r.filter(a=>a.year>=parseInt(e.yearMin))),e.yearMax&&(r=r.filter(a=>a.year<=parseInt(e.yearMax))),e.priceMin&&(r=r.filter(a=>a.price>=parseInt(e.priceMin))),e.priceMax&&(r=r.filter(a=>a.price<=parseInt(e.priceMax))),e.search){const a=e.search.toLowerCase();r=r.filter(e=>e.make.toLowerCase().includes(a)||e.model.toLowerCase().includes(a)||e.color?.toLowerCase().includes(a))}switch(e.sort||"price_asc"){case"price_asc":r.sort((e,a)=>e.price-a.price);break;case"price_desc":r.sort((e,a)=>a.price-e.price);break;case"year_desc":r.sort((e,a)=>a.year-e.year);break;case"year_asc":r.sort((e,a)=>e.year-a.year);break;case"mileage_asc":r.sort((e,a)=>(e.mileage||0)-(a.mileage||0));break;case"mileage_desc":r.sort((e,a)=>(a.mileage||0)-(e.mileage||0))}const o=parseInt(e.page||"1"),t=parseInt(e.pageSize||"20"),s=(o-1)*t,l=s+t,i=r.slice(s,l),n=Math.ceil(r.length/t),h=o<n;return{cars:i,total:r.length,page:o,totalPages:n,hasMore:h}};export{a as carModels,n as generateMockCars,c as mockCarsDatabase,h as mockFetchCars};
